.\" Copyright (c) 1989, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)chflags.2	8.3 (Berkeley) 5/2/95
.\" $FreeBSD: src/lib/libc/sys/chflags.2,v 1.11.2.7 2001/12/14 18:34:00 ru Exp $
.\"
.Dd February 13, 2015
.Dt CHFLAGS 2
.Os
.Sh NAME
.Nm chflags ,
.Nm lchflags ,
.Nm fchflags ,
.Nm chflagsat
.Nd set file flags
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In sys/stat.h
.In unistd.h
.Ft int
.Fn chflags "const char *path" "u_long flags"
.Ft int
.Fn lchflags "const char *path" "u_long flags"
.Ft int
.Fn fchflags "int fd" "u_long flags"
.Ft int
.Fn chflagsat "int fd" "const char *path" "u_long flags" "int atflag"
.Sh DESCRIPTION
The file whose name
is given by
.Fa path
or referenced by the descriptor
.Fa fd
has its flags changed to
.Fa flags .
.Pp
The
.Fn lchflags
system call is like
.Fn chflags
except in the case where the named file is a symbolic link,
in which case
.Fn lchflags
will change the flags of the link itself,
rather than the file it points to.
.Pp
The
.Fn chflagsat
is equivalent to either
.Fn chflags
or
.Fn lchflags
depending on the
.Fa atflag
except in the case where
.Fa path
specifies a relative path.
In this case the file to be changed is determined relative to the directory
associated with the file descriptor
.Fa fd
instead of the current working directory.
The values for the
.Fa atflag
are constructed by a bitwise-inclusive OR of flags from the following list,
defined in
.In fcntl.h :
.Bl -tag -width indent
.It Dv AT_SYMLINK_NOFOLLOW
If
.Fa path
names a symbolic link, then the flags of the symbolic link are changed.
.El
.Pp
If
.Fn chflagsat
is passed the special value
.Dv AT_FDCWD
in the
.Fa fd
parameter, the current working directory is used.
If also
.Fa atflag
is zero, the behavior is identical to a call to
.Fn chflags .
.Pp
The flags specified are formed by
.Em or Ns 'ing
the following values
.Pp
.Bl -tag -width "SF_IMMUTABLE" -compact -offset indent
.It UF_NODUMP
Do not dump the file.
.It UF_IMMUTABLE
The file may not be changed.
.It UF_APPEND
The file may only be appended to.
.It UF_OPAQUE
The directory is opaque when viewed through a union stack.
.It UF_NOUNLINK
The file may not be renamed or deleted.
.It UF_NOHISTORY
Do not retain history for file.
.It UF_CACHE
Enable
.Xr swapcache 8
data caching.
The flag is recursive and need only be set on a top-level directory.
.It SF_ARCHIVED
The file may be archived.
.It SF_IMMUTABLE
The file may not be changed.
.It SF_APPEND
The file may only be appended to.
.It SF_NOUNLINK
The file may not be renamed or deleted.
.It SF_NOHISTORY
Do not retain history for file.
.It SF_NOCACHE
Disable
.Xr swapcache 8
data caching.
The flag is recursive and need only be set on a top-level directory.
.El
.Pp
The
.Dq UF_
prefixed
flags may be set or unset by either the owner of a file or the super-user.
.Pp
The
.Dq SF_
prefixed
flags may only be set or unset by the super-user.
Attempts by the non-super-user to set the super-user only flags
are silently ignored.
These flags may be set at any time, but normally may only be unset when
the system is in single-user mode.
(See
.Xr init 8
for details.)
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
.Fn Chflags
will fail if:
.Bl -tag -width Er
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded 255 characters,
or an entire path name exceeded 1023 characters.
.It Bq Er ENOENT
The named file does not exist.
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
.It Bq Er EPERM
The effective user ID does not match the owner of the file and
the effective user ID is not the super-user.
.It Bq Er EROFS
The named file resides on a read-only file system.
.It Bq Er EFAULT
.Fa Path
points outside the process's allocated address space.
.It Bq Er EIO
An
.Tn I/O
error occurred while reading from or writing to the file system.
.It Bq Er EOPNOTSUPP
The underlying file system does not support file flags.
.El
.Pp
.Fn Fchflags
will fail if:
.Bl -tag -width Er
.It Bq Er EBADF
The descriptor is not valid.
.It Bq Er EINVAL
.Fa fd
refers to a socket, not to a file.
.It Bq Er EPERM
The effective user ID does not match the owner of the file and
the effective user ID is not the super-user.
.It Bq Er EROFS
The file resides on a read-only file system.
.It Bq Er EIO
An
.Tn I/O
error occurred while reading from or writing to the file system.
.It Bq Er EOPNOTSUPP
The underlying file system does not support file flags.
.El
.Sh SEE ALSO
.Xr chflags 1 ,
.Xr fflagstostr 3 ,
.Xr strtofflags 3 ,
.Xr init 8 ,
.Xr swapcache 8
.Sh HISTORY
The
.Nm chflags
and
.Nm fchflags
functions first appeared in
.Bx 4.4 .
